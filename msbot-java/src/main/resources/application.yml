server:
  # port: 8080
  port: ${SERVER_PORT}

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${MYSQL_URL}
    # url: jdbc:mysql://docker-compose-mysql:3306/ms?characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true
    username: ${MYSQL_USER}
    password: ${MYSQL_PWD}
    hikari:
      initialization-fail-timeout: 10000
      #initialization-fail-timeout 这项配置的原因是因为在docker-compose启动时，多线程将任务一起启动，
      #spring boot项目启动会比mysql快，可能造成连接不上数据库而死掉的问题。

  jpa:
    database: mysql
    show-sql: true
    generate-ddl: ${SQL_LOG}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      #自动创建或修改表结构
      ddl-auto: none

  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 1024MB

#http://127.0.0.1:5700
const:
  front-end-url: ${FRONT_END_URL}
  img-folder: ${IMAGE_OUT_PUT_FOLDER}
  bot-name: ${BOT_NAME}
  bot-qq: ${BOT_QQ}
  master-qq: ${MASTER_QQ}
  manager-qq: ${MANAGER_QQ}